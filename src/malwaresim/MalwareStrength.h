/**
 * MalwareStrength abstract values.
 *
 * Copyright (c) 2004-7 David R.Cheriton, All rights reserved.
 *
 * Edited by Mark Linton for CS 249A Fall 2014.
 */

#ifndef MALWARESTRENGTH_H
#define MALWARESTRENGTH_H

/**
 * MalwareStrength is a value type that encapsulates the double-precision value
 * representing how strong a Malware infection is.
 */
class MalwareStrength {
public:

    /** Tolerance for testing for equality or inequality. */
    static constexpr double tol = 1e-4;


    /**
     * Constructor and conversion from double to abstract value.
     */
    MalwareStrength(const double value = 0) :
        value_(value)
    {
        if (value > 1 || value < 0) {
            throw fwk::RangeException("value=range 0..1");
        }
    }

    /** Copy constructor. */
    MalwareStrength(const MalwareStrength& strength) :
        value_(strength.value_)
    {
        // Nothing else to do.
    }


    /** Numeric value for the strength. */
    double value() const {
        return value_;
    }

    /** Modify the strength specifying a number. */
    void valueIs(const double value) {
        value_ = value;
    }

    /** Modify the strength specifying another strength. */
    void valueIs(const MalwareStrength strength) {
        value_ = strength.value();
    }


    /** Test for equality using a builtin tolerance. */
    bool operator ==(const MalwareStrength strength) const {
        return value_ < strength.value_ + tol && value_ > strength.value_ - tol;
    }

    /** Test for inequality using a builtin tolerance. */
    bool operator !=(const MalwareStrength strength) const {
        return value_ >= strength.value_ + tol || value_ <= strength.value_ - tol;
    }

    bool operator <(const MalwareStrength strength) const {
        return value_ < strength.value_;
    }

    bool operator <=(const MalwareStrength strength) const {
        return value_ <= strength.value_;
    }

    bool operator >(const MalwareStrength strength) const {
        return value_ > strength.value_;
    }

    bool operator >=(const MalwareStrength strength) const {
        return value_ >= strength.value_;
    }

    double operator -(const MalwareStrength strength) const {
        return value_ - strength.value_;
    }

protected:

   double value_;

};

#endif
